planner_server:
  ros__parameters:
    use_sim_time: false
    expected_planner_frequency: 10.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.8
      use_astar: true
      allow_unknown: true

controller_server:
  ros__parameters:
    use_sim_time: false
    current_goal_checker: goal_checker
    goal_checker_plugins: ["goal_checker"] # ← 추가
    progress_checker_plugin: "progress_checker" # ← 추가
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.20
      yaw_goal_tolerance: 0.5
      stateful: false      
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.10 # 기본 0.5 -> 완화
      movement_time_allowance: 20.0 # 기본 10.0 -> 완화      
    odom_topic: /atoz/odom
    controller_frequency: 15.0
    controller_plugins: ["FollowPath"]
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      min_vel_x: 0.0
      max_vel_x: 0.26
      max_speed_xy: 0.26 # ← 추가
      min_speed_xy: 0.0 # ← 추가
      max_vel_theta: 1.0
      min_vel_theta: 0.0 # ← 이름 교정
      acc_lim_x: 2.5
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 0 # ← 비홀로노믹
      vtheta_samples: 30
      sim_time: 1.0
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.15
      critics:
        [
          "RotateToGoal",
          "ObstacleFootprint",
          "GoalAlign",
          "PathAlign",
          "PathDist",
          "GoalDist"
        ]
      GoalDist.scale: 1.0
      PathAlign.scale: 0.5
      GoalAlign.scale: 0.5
      PathDist.scale: 3.0
      ObstacleFootprint.scale: 5.0

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: false
      global_frame: map
      robot_base_frame: base_link
      transform_tolerance: 0.2
      robot_radius: 0.20
      footprint_padding: 0.02
      update_frequency: 2.0
      publish_frequency: 1.0
      #width: 4
      #height: 4
      #resolution: 0.07
      rolling_window: false
      plugins: ["static_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
        map_topic: "/projected_map"
        track_unknown_space: true

      #obstacle_layer:
      #  plugin: "nav2_costmap_2d::ObstacleLayer"
      #  observation_sources: pointcloud
      #  pointcloud:
      #    topic: /cloud_registered
      #    max_obstacle_height: 1.5
      #    min_obstacle_height: 0.05
      #    clearing: true
      #    marking: true
      #    obstacle_range: 6.0
      #    raytrace_range: 7.0
      #    data_type: "PointCloud2"
      #    #inf_is_valid: true
      #    expected_update_rate: 0.2
      #    observation_persistence: 0.5

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.20
        cost_scaling_factor: 4.0

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: false
      global_frame: odom
      robot_base_frame: base_link
      transform_tolerance: 0.12
      robot_radius: 0.20
      footprint_clearing_enabled: true
      footprint_padding: 0.02
      update_frequency: 15.0
      publish_frequency: 10.0
      width: 4
      height: 4
      resolution: 0.05
      rolling_window: true
      plugins: ["voxel_layer", "inflation_layer"]
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        origin_z: -0.30
        z_resolution: 0.05
        z_voxels: 24
        max_obstacle_height: 0.35
        publish_voxel_map: false
        observation_sources: pointcloud
        pointcloud:
          topic: /cloud_registered
          max_obstacle_height: 0.35
          min_obstacle_height: 0.05
          expected_update_rate: 0.0
          observation_persistence: 0.0
          obstacle_range: 5.0
          raytrace_range: 7.0
          clearing: true
          marking: true
          data_type: "PointCloud2"
          sensor_frame: base_link
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.25
        cost_scaling_factor: 3.0

bt_navigator:
  ros__parameters:
    use_sim_time: false
    bt_loop_duration: 50
    default_server_timeout: 5000
    default_nav_to_pose_bt_xml: "/opt/ros/humble/share/nav2_bt_navigator/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml"
    default_nav_through_poses_bt_xml: "/opt/ros/humble/share/nav2_bt_navigator/behavior_trees/navigate_through_poses_w_replanning_and_recovery.xml"
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_planner_selector_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_remove_passed_goals_action_bt_node

velocity_smoother:
  ros__parameters:
    use_sim_time: false
    odom_topic: /atoz/odom
    smoothing_frequency: 20.0
    scale_velocities: false
    feedback: "OPEN_LOOP" # odom이 매끄럽지 않으면 OPEN_LOOP가 편함
    max_velocity: { x: 0.26, z: 1.0 }
    min_velocity: { x: 0.0, z: 0.0 }
    max_accel: { x: 2.5, z: 3.2 }
    max_decel: { x: 2.5, z: 3.2 }
    velocity_timeout: 0.3

smoother_server:
  ros__parameters:
    use_sim_time: false
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 0.1
      max_its: 100

recoveries_server:
  ros__parameters:
    use_sim_time: false
    recovery_plugins: ["Spin", "BackUp", "Wait"]
    Spin:
      plugin: "nav2_recoveries/Spin"
    BackUp:
      plugin: "nav2_recoveries/BackUp"
    Wait:
      plugin: "nav2_recoveries/Wait"

